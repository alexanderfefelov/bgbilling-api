<?xml version="1.0" encoding="UTF-8"?>
<!-- Published by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.3-b01-. -->
<!-- Generated by JAX-WS RI at http://jax-ws.dev.java.net. RI's version is JAX-WS RI 2.2.3-b01-. -->
<definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
             xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy"
             xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:tns="http://service.common.product.order.systems.oss.bitel.ru/"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/"
             targetNamespace="http://service.common.product.order.systems.oss.bitel.ru/" name="ProductOrderService">
    <types>
        <xs:schema xmlns:tns="http://service.common.product.order.systems.oss.bitel.ru/"
                   xmlns:ns1="http://common.bitel.ru" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0"
                   targetNamespace="http://service.common.product.order.systems.oss.bitel.ru/">
            <xs:element name="BGException" type="tns:BGException"/>
            <xs:element name="BGIllegalAccessException" type="tns:BGIllegalAccessException"/>
            <xs:element name="BGIllegalArgumentException" type="tns:BGIllegalArgumentException"/>
            <xs:element name="BGMessageException" type="tns:BGMessageException"/>
            <xs:element name="productActivate" type="tns:productActivate"/>
            <xs:element name="productActivateOld" type="tns:productActivateOld"/>
            <xs:element name="productActivateOldResponse" type="tns:productActivateOldResponse"/>
            <xs:element name="productActivateResponse" type="tns:productActivateResponse"/>
            <xs:element name="productDeactivate" type="tns:productDeactivate"/>
            <xs:element name="productDeactivateOld" type="tns:productDeactivateOld"/>
            <xs:element name="productDeactivateOldResponse" type="tns:productDeactivateOldResponse"/>
            <xs:element name="productDeactivateResponse" type="tns:productDeactivateResponse"/>
            <xs:element name="productOfferingGet" type="tns:productOfferingGet"/>
            <xs:element name="productOfferingGetResponse" type="tns:productOfferingGetResponse"/>
            <xs:element name="productOfferingList" type="tns:productOfferingList"/>
            <xs:element name="productOfferingListResponse" type="tns:productOfferingListResponse"/>
            <xs:element name="productReactivate" type="tns:productReactivate"/>
            <xs:element name="productReactivateResponse" type="tns:productReactivateResponse"/>
            <xs:element name="productTariffOfferingList" type="tns:productTariffOfferingList"/>
            <xs:element name="productTariffOfferingListResponse" type="tns:productTariffOfferingListResponse"/>
            <xs:complexType name="productDeactivate">
                <xs:sequence>
                    <xs:element name="contractId" type="xs:int"/>
                    <xs:element name="productId" type="xs:int"/>
                    <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="customer" type="xs:boolean"/>
                    <xs:element name="sync" type="xs:boolean"/>
                    <xs:element name="now" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productDeactivateResponse">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="BGException">
                <xs:sequence>
                    <xs:element name="message" type="xs:string" minOccurs="0"/>
                    <xs:element name="tag" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="BGMessageException">
                <xs:sequence>
                    <xs:element name="message" type="xs:string" minOccurs="0"/>
                    <xs:element name="tag" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="BGIllegalAccessException">
                <xs:sequence>
                    <xs:element name="message" type="xs:string" minOccurs="0"/>
                    <xs:element name="tag" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="BGIllegalArgumentException">
                <xs:sequence>
                    <xs:element name="message" type="xs:string" minOccurs="0"/>
                    <xs:element name="tag" type="xs:string" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productDeactivateOld">
                <xs:sequence>
                    <xs:element name="contractId" type="xs:int"/>
                    <xs:element name="productId" type="xs:int"/>
                    <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="customer" type="xs:boolean"/>
                    <xs:element name="sync" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productDeactivateOldResponse">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="productActivateOld">
                <xs:sequence>
                    <xs:element name="product" type="tns:product" minOccurs="0"/>
                    <xs:element name="customer" type="xs:boolean"/>
                    <xs:element name="sync" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="product">
                <xs:complexContent>
                    <xs:extension base="ns1:id">
                        <xs:sequence>
                            <xs:element name="comment" type="xs:string" minOccurs="0"/>
                            <xs:element name="serviceList" minOccurs="0">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="service" type="tns:service" minOccurs="0"
                                                    maxOccurs="unbounded"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="accountId" type="xs:int" use="required"/>
                        <xs:attribute name="activationModeId" type="xs:int" use="required"/>
                        <xs:attribute name="activationPrice" type="xs:decimal"/>
                        <xs:attribute name="activationTime" type="xs:string"/>
                        <xs:attribute name="contractId" type="xs:int" use="required"/>
                        <xs:attribute name="deactivationTime" type="xs:string"/>
                        <xs:attribute name="description" type="xs:string"/>
                        <xs:attribute name="devProductId" type="xs:string"/>
                        <xs:attribute name="devState" type="xs:short" use="required"/>
                        <xs:attribute name="productSpecId" type="xs:int" use="required"/>
                        <xs:attribute name="productSpecTitle" type="xs:string"/>
                        <xs:attribute name="subscriptionTimeFrom" type="xs:string"/>
                        <xs:attribute name="subscriptionTimeTo" type="xs:string"/>
                        <xs:attribute name="timeFrom" type="xs:string"/>
                        <xs:attribute name="timeTo" type="xs:string"/>
                        <xs:attribute name="userId" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="service">
                <xs:complexContent>
                    <xs:extension base="ns1:id">
                        <xs:sequence/>
                        <xs:attribute name="accountId" type="xs:int" use="required"/>
                        <xs:attribute name="contractId" type="xs:int" use="required"/>
                        <xs:attribute name="deviceState" type="xs:short" use="required"/>
                        <xs:attribute name="productId" type="xs:int" use="required"/>
                        <xs:attribute name="serviceSpecId" type="xs:int" use="required"/>
                        <xs:attribute name="serviceSpecTitle" type="xs:string"/>
                        <xs:attribute name="timeFrom" type="xs:dateTime"/>
                        <xs:attribute name="timeTo" type="xs:dateTime"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="productActivateOldResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productActivate">
                <xs:sequence>
                    <xs:element name="product" type="tns:product" minOccurs="0"/>
                    <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="customer" type="xs:boolean"/>
                    <xs:element name="sync" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productActivateResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productOfferingList">
                <xs:sequence>
                    <xs:element name="moduleId" type="xs:int" minOccurs="0"/>
                    <xs:element name="contractId" type="xs:int"/>
                    <xs:element name="accountId" type="xs:int"/>
                    <xs:element name="productSpecId" type="xs:int"/>
                    <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="availableOnly" type="xs:boolean"/>
                    <xs:element name="customer" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productOfferingListResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:productOffering" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productOffering">
                <xs:sequence>
                    <xs:element name="activationModeList" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="productOfferingActivationMode"
                                            type="tns:productOfferingActivationMode" minOccurs="0"
                                            maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="productSpec" type="tns:productSpec" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="enable" type="xs:boolean" use="required"/>
                <xs:attribute name="periodAmount" type="xs:int" use="required"/>
                <xs:attribute name="periodMode" type="xs:int" use="required"/>
                <xs:attribute name="price" type="xs:decimal"/>
            </xs:complexType>
            <xs:complexType name="productOfferingActivationMode">
                <xs:sequence>
                    <xs:element name="productSpecActivationMode" type="tns:productSpecActivationMode" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="activationPrice" type="xs:decimal"/>
                <xs:attribute name="periodAmount" type="xs:int" use="required"/>
                <xs:attribute name="periodMode" type="xs:int" use="required"/>
                <xs:attribute name="price" type="xs:decimal"/>
                <xs:attribute name="priceString" type="xs:string"/>
            </xs:complexType>
            <xs:complexType name="productSpecActivationMode">
                <xs:complexContent>
                    <xs:extension base="ns1:idTitle">
                        <xs:sequence/>
                        <xs:attribute name="dateFrom" type="xs:dateTime"/>
                        <xs:attribute name="dateTo" type="xs:dateTime"/>
                        <xs:attribute name="deactivationMode" type="xs:int" use="required"/>
                        <xs:attribute name="periodAmount" type="xs:int" use="required"/>
                        <xs:attribute name="periodMode" type="xs:int" use="required"/>
                        <xs:attribute name="productSpecId" type="xs:int" use="required"/>
                        <xs:attribute name="reactivationMode" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="productSpec">
                <xs:complexContent>
                    <xs:extension base="tns:entity">
                        <xs:sequence>
                            <xs:element name="activationModeList" minOccurs="0">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="productSpecActivationMode"
                                                    type="tns:productSpecActivationMode" minOccurs="0"
                                                    maxOccurs="unbounded"/>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                            <xs:element name="children" type="tns:productSpec" nillable="true" minOccurs="0"
                                        maxOccurs="unbounded"/>
                            <xs:element name="comment" type="xs:string" minOccurs="0"/>
                            <xs:element name="description" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                        <xs:attribute name="activationByCustomer" type="xs:boolean" use="required"/>
                        <xs:attribute name="contractGroups" type="xs:long" use="required"/>
                        <xs:attribute name="dateFrom" type="xs:dateTime"/>
                        <xs:attribute name="dateTo" type="xs:dateTime"/>
                        <xs:attribute name="deactivationByCustomer" type="xs:boolean" use="required"/>
                        <xs:attribute name="depends">
                            <xs:simpleType>
                                <xs:list itemType="xs:int"/>
                            </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="hideForContractGroups" type="xs:long" use="required"/>
                        <xs:attribute name="hideForContractGroupsMode" type="xs:int" use="required"/>
                        <xs:attribute name="hideForCustomer" type="xs:boolean" use="required"/>
                        <xs:attribute name="identifier" type="xs:string"/>
                        <xs:attribute name="incompatible">
                            <xs:simpleType>
                                <xs:list itemType="xs:int"/>
                            </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="moduleId" type="xs:int" use="required"/>
                        <xs:attribute name="notRealtime" type="xs:boolean" use="required"/>
                        <xs:attribute name="parentId" type="xs:int" use="required"/>
                        <xs:attribute name="periodic" type="xs:boolean" use="required"/>
                        <xs:attribute name="priority" type="xs:int" use="required"/>
                        <xs:attribute name="tariffIds">
                            <xs:simpleType>
                                <xs:list itemType="xs:int"/>
                            </xs:simpleType>
                        </xs:attribute>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entity" abstract="true">
                <xs:complexContent>
                    <xs:extension base="tns:abstractEntity">
                        <xs:sequence/>
                        <xs:attribute name="entityId" type="xs:int" use="required"/>
                        <xs:attribute name="entityTitle" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="abstractEntity" abstract="true">
                <xs:complexContent>
                    <xs:extension base="ns1:idTitle">
                        <xs:sequence>
                            <xs:element name="entityAttributes">
                                <xs:complexType>
                                    <xs:sequence>
                                        <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                                            <xs:complexType>
                                                <xs:sequence>
                                                    <xs:element name="key" minOccurs="0" type="xs:int"/>
                                                    <xs:element name="value" minOccurs="0" type="tns:entityAttr"/>
                                                </xs:sequence>
                                            </xs:complexType>
                                        </xs:element>
                                    </xs:sequence>
                                </xs:complexType>
                            </xs:element>
                        </xs:sequence>
                        <xs:attribute name="entitySpecId" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttr" abstract="true">
                <xs:sequence>
                    <xs:element name="entityId" type="xs:int"/>
                    <xs:element name="entitySpecAttrId" type="xs:int"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="entityAttrText">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence/>
                        <xs:attribute name="value" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttrInt">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence/>
                        <xs:attribute name="value" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttrList">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence/>
                        <xs:attribute name="title" type="xs:string"/>
                        <xs:attribute name="value" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttrDate">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence/>
                        <xs:attribute name="value" type="xs:dateTime"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttrAddress">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence>
                            <xs:element name="formatKey" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                        <xs:attribute name="comment" type="xs:string"/>
                        <xs:attribute name="flat" type="xs:string"/>
                        <xs:attribute name="floor" type="xs:int" use="required"/>
                        <xs:attribute name="houseId" type="xs:int" use="required"/>
                        <xs:attribute name="pod" type="xs:int" use="required"/>
                        <xs:attribute name="room" type="xs:string"/>
                        <xs:attribute name="title" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttrEmail">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence/>
                        <xs:attribute name="value" type="xs:string"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttrContract">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence/>
                        <xs:attribute name="title" type="xs:string"/>
                        <xs:attribute name="value" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="entityAttrBoolean">
                <xs:complexContent>
                    <xs:extension base="tns:entityAttr">
                        <xs:sequence/>
                        <xs:attribute name="value" type="xs:boolean" use="required"/>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType name="productOfferingGet">
                <xs:sequence>
                    <xs:element name="moduleId" type="xs:int" minOccurs="0"/>
                    <xs:element name="contractId" type="xs:int"/>
                    <xs:element name="accountId" type="xs:int"/>
                    <xs:element name="productSpecId" type="xs:int"/>
                    <xs:element name="activationModeId" type="xs:int"/>
                    <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="availableOnly" type="xs:boolean"/>
                    <xs:element name="customer" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productOfferingGetResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:productOffering" minOccurs="0"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productReactivate">
                <xs:sequence>
                    <xs:element name="contractId" type="xs:int"/>
                    <xs:element name="productId" type="xs:int"/>
                    <xs:element name="sync" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productReactivateResponse">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="productTariffOfferingList">
                <xs:sequence>
                    <xs:element name="moduleId" type="xs:int" minOccurs="0"/>
                    <xs:element name="tariffId" type="xs:int"/>
                    <xs:element name="time" type="xs:dateTime" minOccurs="0"/>
                    <xs:element name="availableOnly" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="productTariffOfferingListResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:productOffering" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
        <xsc:schema xmlns:tns="http://common.bitel.ru" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:common="http://common.bitel.ru" xmlns:xsc="http://www.w3.org/2001/XMLSchema"
                    elementFormDefault="unqualified" version="1.0" targetNamespace="http://common.bitel.ru">
            <xsc:complexType name="id">
                <xsc:sequence/>
                <xsc:attribute name="id" type="xsc:int" use="required"/>
            </xsc:complexType>
            <xsc:complexType name="idTitle">
                <xsc:complexContent>
                    <xsc:extension base="tns:id">
                        <xsc:sequence/>
                        <xsc:attribute name="title" type="xsc:string"/>
                    </xsc:extension>
                </xsc:complexContent>
            </xsc:complexType>
        </xsc:schema>
    </types>
    <message name="productActivateOld">
        <part name="parameters" element="tns:productActivateOld">
        </part>
    </message>
    <message name="productActivateOldResponse">
        <part name="parameters" element="tns:productActivateOldResponse">
        </part>
    </message>
    <message name="BGException">
        <part name="fault" element="tns:BGException">
        </part>
    </message>
    <message name="BGMessageException">
        <part name="fault" element="tns:BGMessageException">
        </part>
    </message>
    <message name="BGIllegalAccessException">
        <part name="fault" element="tns:BGIllegalAccessException">
        </part>
    </message>
    <message name="BGIllegalArgumentException">
        <part name="fault" element="tns:BGIllegalArgumentException">
        </part>
    </message>
    <message name="productActivate">
        <part name="parameters" element="tns:productActivate">
        </part>
    </message>
    <message name="productActivateResponse">
        <part name="parameters" element="tns:productActivateResponse">
        </part>
    </message>
    <message name="productTariffOfferingList">
        <part name="parameters" element="tns:productTariffOfferingList">
        </part>
    </message>
    <message name="productTariffOfferingListResponse">
        <part name="parameters" element="tns:productTariffOfferingListResponse">
        </part>
    </message>
    <message name="productDeactivate">
        <part name="parameters" element="tns:productDeactivate">
        </part>
    </message>
    <message name="productDeactivateResponse">
        <part name="parameters" element="tns:productDeactivateResponse">
        </part>
    </message>
    <message name="productDeactivateOld">
        <part name="parameters" element="tns:productDeactivateOld">
        </part>
    </message>
    <message name="productDeactivateOldResponse">
        <part name="parameters" element="tns:productDeactivateOldResponse">
        </part>
    </message>
    <message name="productReactivate">
        <part name="parameters" element="tns:productReactivate">
        </part>
    </message>
    <message name="productReactivateResponse">
        <part name="parameters" element="tns:productReactivateResponse">
        </part>
    </message>
    <message name="productOfferingGet">
        <part name="parameters" element="tns:productOfferingGet">
        </part>
    </message>
    <message name="productOfferingGetResponse">
        <part name="parameters" element="tns:productOfferingGetResponse">
        </part>
    </message>
    <message name="productOfferingList">
        <part name="parameters" element="tns:productOfferingList">
        </part>
    </message>
    <message name="productOfferingListResponse">
        <part name="parameters" element="tns:productOfferingListResponse">
        </part>
    </message>
    <portType name="ProductOrderService">
        <operation name="productActivateOld">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateOldRequest"
                   message="tns:productActivateOld">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateOldResponse"
                    message="tns:productActivateOldResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateOld/Fault/BGException">
            </fault>
            <fault message="tns:BGMessageException" name="BGMessageException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateOld/Fault/BGMessageException">
            </fault>
            <fault message="tns:BGIllegalAccessException" name="BGIllegalAccessException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateOld/Fault/BGIllegalAccessException">
            </fault>
            <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateOld/Fault/BGIllegalArgumentException">
            </fault>
        </operation>
        <operation name="productActivate">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateRequest"
                   message="tns:productActivate">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivateResponse"
                    message="tns:productActivateResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivate/Fault/BGException">
            </fault>
            <fault message="tns:BGMessageException" name="BGMessageException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivate/Fault/BGMessageException">
            </fault>
            <fault message="tns:BGIllegalAccessException" name="BGIllegalAccessException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivate/Fault/BGIllegalAccessException">
            </fault>
            <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productActivate/Fault/BGIllegalArgumentException">
            </fault>
        </operation>
        <operation name="productTariffOfferingList">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productTariffOfferingListRequest"
                   message="tns:productTariffOfferingList">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productTariffOfferingListResponse"
                    message="tns:productTariffOfferingListResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productTariffOfferingList/Fault/BGException">
            </fault>
            <fault message="tns:BGMessageException" name="BGMessageException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productTariffOfferingList/Fault/BGMessageException">
            </fault>
            <fault message="tns:BGIllegalAccessException" name="BGIllegalAccessException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productTariffOfferingList/Fault/BGIllegalAccessException">
            </fault>
            <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productTariffOfferingList/Fault/BGIllegalArgumentException">
            </fault>
        </operation>
        <operation name="productDeactivate">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateRequest"
                   message="tns:productDeactivate">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateResponse"
                    message="tns:productDeactivateResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivate/Fault/BGException">
            </fault>
            <fault message="tns:BGMessageException" name="BGMessageException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivate/Fault/BGMessageException">
            </fault>
            <fault message="tns:BGIllegalAccessException" name="BGIllegalAccessException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivate/Fault/BGIllegalAccessException">
            </fault>
            <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivate/Fault/BGIllegalArgumentException">
            </fault>
        </operation>
        <operation name="productDeactivateOld">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateOldRequest"
                   message="tns:productDeactivateOld">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateOldResponse"
                    message="tns:productDeactivateOldResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateOld/Fault/BGException">
            </fault>
            <fault message="tns:BGMessageException" name="BGMessageException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateOld/Fault/BGMessageException">
            </fault>
            <fault message="tns:BGIllegalAccessException" name="BGIllegalAccessException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateOld/Fault/BGIllegalAccessException">
            </fault>
            <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productDeactivateOld/Fault/BGIllegalArgumentException">
            </fault>
        </operation>
        <operation name="productReactivate">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productReactivateRequest"
                   message="tns:productReactivate">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productReactivateResponse"
                    message="tns:productReactivateResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productReactivate/Fault/BGException">
            </fault>
        </operation>
        <operation name="productOfferingGet">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingGetRequest"
                   message="tns:productOfferingGet">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingGetResponse"
                    message="tns:productOfferingGetResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingGet/Fault/BGException">
            </fault>
            <fault message="tns:BGMessageException" name="BGMessageException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingGet/Fault/BGMessageException">
            </fault>
            <fault message="tns:BGIllegalAccessException" name="BGIllegalAccessException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingGet/Fault/BGIllegalAccessException">
            </fault>
            <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingGet/Fault/BGIllegalArgumentException">
            </fault>
        </operation>
        <operation name="productOfferingList">
            <input wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingListRequest"
                   message="tns:productOfferingList">
            </input>
            <output wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingListResponse"
                    message="tns:productOfferingListResponse">
            </output>
            <fault message="tns:BGException" name="BGException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingList/Fault/BGException">
            </fault>
            <fault message="tns:BGMessageException" name="BGMessageException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingList/Fault/BGMessageException">
            </fault>
            <fault message="tns:BGIllegalAccessException" name="BGIllegalAccessException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingList/Fault/BGIllegalAccessException">
            </fault>
            <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException"
                   wsam:Action="http://service.common.product.order.systems.oss.bitel.ru/ProductOrderService/productOfferingList/Fault/BGIllegalArgumentException">
            </fault>
        </operation>
    </portType>
    <binding name="ProductOrderServiceBinding" type="tns:ProductOrderService">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document">
        </soap:binding>
        <operation name="productActivateOld">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGMessageException">
                <soap:fault name="BGMessageException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalAccessException">
                <soap:fault name="BGIllegalAccessException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalArgumentException">
                <soap:fault name="BGIllegalArgumentException" use="literal">
                </soap:fault>
            </fault>
        </operation>
        <operation name="productActivate">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGMessageException">
                <soap:fault name="BGMessageException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalAccessException">
                <soap:fault name="BGIllegalAccessException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalArgumentException">
                <soap:fault name="BGIllegalArgumentException" use="literal">
                </soap:fault>
            </fault>
        </operation>
        <operation name="productTariffOfferingList">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGMessageException">
                <soap:fault name="BGMessageException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalAccessException">
                <soap:fault name="BGIllegalAccessException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalArgumentException">
                <soap:fault name="BGIllegalArgumentException" use="literal">
                </soap:fault>
            </fault>
        </operation>
        <operation name="productDeactivate">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGMessageException">
                <soap:fault name="BGMessageException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalAccessException">
                <soap:fault name="BGIllegalAccessException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalArgumentException">
                <soap:fault name="BGIllegalArgumentException" use="literal">
                </soap:fault>
            </fault>
        </operation>
        <operation name="productDeactivateOld">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGMessageException">
                <soap:fault name="BGMessageException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalAccessException">
                <soap:fault name="BGIllegalAccessException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalArgumentException">
                <soap:fault name="BGIllegalArgumentException" use="literal">
                </soap:fault>
            </fault>
        </operation>
        <operation name="productReactivate">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
        </operation>
        <operation name="productOfferingGet">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGMessageException">
                <soap:fault name="BGMessageException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalAccessException">
                <soap:fault name="BGIllegalAccessException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalArgumentException">
                <soap:fault name="BGIllegalArgumentException" use="literal">
                </soap:fault>
            </fault>
        </operation>
        <operation name="productOfferingList">
            <soap:operation soapAction="">
            </soap:operation>
            <input>
                <soap:body use="literal">
                </soap:body>
            </input>
            <output>
                <soap:body use="literal">
                </soap:body>
            </output>
            <fault name="BGException">
                <soap:fault name="BGException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGMessageException">
                <soap:fault name="BGMessageException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalAccessException">
                <soap:fault name="BGIllegalAccessException" use="literal">
                </soap:fault>
            </fault>
            <fault name="BGIllegalArgumentException">
                <soap:fault name="BGIllegalArgumentException" use="literal">
                </soap:fault>
            </fault>
        </operation>
    </binding>
    <service name="ProductOrderService">
        <port name="ProductOrderService" binding="tns:ProductOrderServiceBinding">
            <soap:address location="REPLACE_WITH_ACTUAL_URL">
            </soap:address>
        </port>
    </service>
</definitions>

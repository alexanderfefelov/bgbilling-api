<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. -->
<definitions targetNamespace="http://common.script.kernel.bgbilling.bitel.ru/" name="EventScriptService" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:tns="http://common.script.kernel.bgbilling.bitel.ru/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata">
  <types>
    <xs:schema version="1.0" targetNamespace="http://common.script.kernel.bgbilling.bitel.ru/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://common.bitel.ru">

      <xs:import namespace="http://common.bitel.ru"/>

      <xs:element name="BGException" type="tns:BGException"/>

      <xs:element name="deleteEventScriptLink" type="tns:deleteEventScriptLink"/>

      <xs:element name="deleteEventScriptLinkResponse" type="tns:deleteEventScriptLinkResponse"/>

      <xs:element name="getEventLinks" type="tns:getEventLinks"/>

      <xs:element name="getEventLinksByScript" type="tns:getEventLinksByScript"/>

      <xs:element name="getEventLinksByScriptResponse" type="tns:getEventLinksByScriptResponse"/>

      <xs:element name="getEventLinksResponse" type="tns:getEventLinksResponse"/>

      <xs:element name="getEventScriptLink" type="tns:getEventScriptLink"/>

      <xs:element name="getEventScriptLinkResponse" type="tns:getEventScriptLinkResponse"/>

      <xs:element name="getEventTypeList" type="tns:getEventTypeList"/>

      <xs:element name="getEventTypeListResponse" type="tns:getEventTypeListResponse"/>

      <xs:element name="getEventTypesByEventId" type="tns:getEventTypesByEventId"/>

      <xs:element name="getEventTypesByEventIdResponse" type="tns:getEventTypesByEventIdResponse"/>

      <xs:element name="getInterfaceName" type="tns:getInterfaceName"/>

      <xs:element name="getInterfaceNameResponse" type="tns:getInterfaceNameResponse"/>

      <xs:element name="getScriptList" type="tns:getScriptList"/>

      <xs:element name="getScriptListResponse" type="tns:getScriptListResponse"/>

      <xs:element name="getSuperclassName" type="tns:getSuperclassName"/>

      <xs:element name="getSuperclassNameResponse" type="tns:getSuperclassNameResponse"/>

      <xs:element name="updateEventScriptLink" type="tns:updateEventScriptLink"/>

      <xs:element name="updateEventScriptLinkResponse" type="tns:updateEventScriptLinkResponse"/>

      <xs:complexType name="getScriptList">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getScriptListResponse">
        <xs:sequence>
          <xs:element name="return" type="ns1:idTitle" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="updateEventScriptLink">
        <xs:sequence>
          <xs:element name="arg0" type="tns:eventScriptLink" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="eventScriptLink">
        <xs:complexContent>
          <xs:extension base="ns1:idTitle">
            <xs:sequence>
              <xs:element name="className" type="xs:string" minOccurs="0"/>
              <xs:element name="eventKey" type="xs:string" minOccurs="0"/>
              <xs:element name="scriptId" type="xs:int"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="updateEventScriptLinkResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="BGException">
        <xs:sequence>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="tag" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="deleteEventScriptLink">
        <xs:sequence>
          <xs:element name="arg0" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="deleteEventScriptLinkResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getEventTypesByEventId">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventTypesByEventIdResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:eventType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="eventType">
        <xs:complexContent>
          <xs:extension base="ns1:idTitle">
            <xs:sequence>
              <xs:element name="eventId" type="xs:string" minOccurs="0"/>
              <xs:element name="moduleId" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="getInterfaceName">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getInterfaceNameResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getSuperclassName">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getSuperclassNameResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventLinksByScript">
        <xs:sequence>
          <xs:element name="arg0" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventLinksByScriptResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:eventScriptLink" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventTypeList">
        <xs:sequence>
          <xs:element name="arg0" type="xs:int"/>
          <xs:element name="arg1" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventTypeListResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:eventType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventLinks">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getEventLinksResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:eventScriptLink" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventScriptLink">
        <xs:sequence>
          <xs:element name="arg0" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getEventScriptLinkResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:eventScriptLink" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
    <xsc:schema elementFormDefault="unqualified" version="1.0" targetNamespace="http://common.bitel.ru" xmlns:common="http://common.bitel.ru" xmlns:tns="http://common.bitel.ru" xmlns:xsc="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

      <xsc:complexType name="idTitle">
        <xsc:complexContent>
          <xsc:extension base="tns:id">
            <xsc:sequence/>
            <xsc:attribute name="title" type="xsc:string"/>
          </xsc:extension>
        </xsc:complexContent>
      </xsc:complexType>

      <xsc:complexType name="id">
        <xsc:sequence/>
        <xsc:attribute name="id" type="xsc:int" use="required"/>
      </xsc:complexType>
</xsc:schema>
  </types>
  <message name="getEventTypeList">
    <part name="parameters" element="tns:getEventTypeList"/>
  </message>
  <message name="getEventTypeListResponse">
    <part name="parameters" element="tns:getEventTypeListResponse"/>
  </message>
  <message name="getScriptList">
    <part name="parameters" element="tns:getScriptList"/>
  </message>
  <message name="getScriptListResponse">
    <part name="parameters" element="tns:getScriptListResponse"/>
  </message>
  <message name="getEventLinksByScript">
    <part name="parameters" element="tns:getEventLinksByScript"/>
  </message>
  <message name="getEventLinksByScriptResponse">
    <part name="parameters" element="tns:getEventLinksByScriptResponse"/>
  </message>
  <message name="BGException">
    <part name="fault" element="tns:BGException"/>
  </message>
  <message name="updateEventScriptLink">
    <part name="parameters" element="tns:updateEventScriptLink"/>
  </message>
  <message name="updateEventScriptLinkResponse">
    <part name="parameters" element="tns:updateEventScriptLinkResponse"/>
  </message>
  <message name="getEventScriptLink">
    <part name="parameters" element="tns:getEventScriptLink"/>
  </message>
  <message name="getEventScriptLinkResponse">
    <part name="parameters" element="tns:getEventScriptLinkResponse"/>
  </message>
  <message name="deleteEventScriptLink">
    <part name="parameters" element="tns:deleteEventScriptLink"/>
  </message>
  <message name="deleteEventScriptLinkResponse">
    <part name="parameters" element="tns:deleteEventScriptLinkResponse"/>
  </message>
  <message name="getEventTypesByEventId">
    <part name="parameters" element="tns:getEventTypesByEventId"/>
  </message>
  <message name="getEventTypesByEventIdResponse">
    <part name="parameters" element="tns:getEventTypesByEventIdResponse"/>
  </message>
  <message name="getEventLinks">
    <part name="parameters" element="tns:getEventLinks"/>
  </message>
  <message name="getEventLinksResponse">
    <part name="parameters" element="tns:getEventLinksResponse"/>
  </message>
  <message name="getInterfaceName">
    <part name="parameters" element="tns:getInterfaceName"/>
  </message>
  <message name="getInterfaceNameResponse">
    <part name="parameters" element="tns:getInterfaceNameResponse"/>
  </message>
  <message name="getSuperclassName">
    <part name="parameters" element="tns:getSuperclassName"/>
  </message>
  <message name="getSuperclassNameResponse">
    <part name="parameters" element="tns:getSuperclassNameResponse"/>
  </message>
  <portType name="EventScriptService">
    <operation name="getEventTypeList">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventTypeListRequest" message="tns:getEventTypeList"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventTypeListResponse" message="tns:getEventTypeListResponse"/>
    </operation>
    <operation name="getScriptList">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getScriptListRequest" message="tns:getScriptList"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getScriptListResponse" message="tns:getScriptListResponse"/>
    </operation>
    <operation name="getEventLinksByScript">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventLinksByScriptRequest" message="tns:getEventLinksByScript"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventLinksByScriptResponse" message="tns:getEventLinksByScriptResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventLinksByScript/Fault/BGException"/>
    </operation>
    <operation name="updateEventScriptLink">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/updateEventScriptLinkRequest" message="tns:updateEventScriptLink"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/updateEventScriptLinkResponse" message="tns:updateEventScriptLinkResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/updateEventScriptLink/Fault/BGException"/>
    </operation>
    <operation name="getEventScriptLink">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventScriptLinkRequest" message="tns:getEventScriptLink"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventScriptLinkResponse" message="tns:getEventScriptLinkResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventScriptLink/Fault/BGException"/>
    </operation>
    <operation name="deleteEventScriptLink">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/deleteEventScriptLinkRequest" message="tns:deleteEventScriptLink"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/deleteEventScriptLinkResponse" message="tns:deleteEventScriptLinkResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/deleteEventScriptLink/Fault/BGException"/>
    </operation>
    <operation name="getEventTypesByEventId">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventTypesByEventIdRequest" message="tns:getEventTypesByEventId"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventTypesByEventIdResponse" message="tns:getEventTypesByEventIdResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventTypesByEventId/Fault/BGException"/>
    </operation>
    <operation name="getEventLinks">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventLinksRequest" message="tns:getEventLinks"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventLinksResponse" message="tns:getEventLinksResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getEventLinks/Fault/BGException"/>
    </operation>
    <operation name="getInterfaceName">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getInterfaceNameRequest" message="tns:getInterfaceName"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getInterfaceNameResponse" message="tns:getInterfaceNameResponse"/>
    </operation>
    <operation name="getSuperclassName">
      <input wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getSuperclassNameRequest" message="tns:getSuperclassName"/>
      <output wsam:Action="http://common.script.kernel.bgbilling.bitel.ru/EventScriptService/getSuperclassNameResponse" message="tns:getSuperclassNameResponse"/>
    </operation>
  </portType>
  <binding name="EventScriptServiceBinding" type="tns:EventScriptService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="getEventTypeList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getScriptList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getEventLinksByScript">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="updateEventScriptLink">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getEventScriptLink">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="deleteEventScriptLink">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getEventTypesByEventId">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getEventLinks">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getInterfaceName">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="getSuperclassName">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="EventScriptService">
    <port name="EventScriptService" binding="tns:EventScriptServiceBinding">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>


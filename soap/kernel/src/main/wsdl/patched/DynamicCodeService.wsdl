<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. -->
<definitions targetNamespace="http://common.dynamic.kernel.bgbilling.bitel.ru/" name="DynamicCodeService" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:tns="http://common.dynamic.kernel.bgbilling.bitel.ru/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata">
  <types>
    <xs:schema version="1.0" targetNamespace="http://common.dynamic.kernel.bgbilling.bitel.ru/" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema">

      
      <xs:element name="BGException" type="tns:BGException"/>

      <xs:element name="compile" type="tns:compile"/>

      <xs:element name="compileResponse" type="tns:compileResponse"/>

<!-- alexanderfefelov
      <xs:element name="deleteClasses" type="tns:deleteClasses"/>
-->

      <xs:element name="deleteClassesResponse" type="tns:deleteClassesResponse"/>

      <xs:element name="generateCode" type="tns:generateCode"/>

      <xs:element name="generateCodeResponse" type="tns:generateCodeResponse"/>

      <xs:element name="getClassNamesByInterface" type="tns:getClassNamesByInterface"/>

      <xs:element name="getClassNamesByInterfaceResponse" type="tns:getClassNamesByInterfaceResponse"/>

      <xs:element name="getDynamicClasses" type="tns:getDynamicClasses"/>

      <xs:element name="getDynamicClassesByInterface" type="tns:getDynamicClassesByInterface"/>

      <xs:element name="getDynamicClassesByInterfaceResponse" type="tns:getDynamicClassesByInterfaceResponse"/>

      <xs:element name="getDynamicClassesResponse" type="tns:getDynamicClassesResponse"/>

      <xs:element name="getSource" type="tns:getSource"/>

      <xs:element name="getSourceResponse" type="tns:getSourceResponse"/>

      <xs:element name="isClassExists" type="tns:isClassExists"/>

      <xs:element name="isClassExistsResponse" type="tns:isClassExistsResponse"/>

      <xs:element name="recompileAll" type="tns:recompileAll"/>

      <xs:element name="recompileAllResponse" type="tns:recompileAllResponse"/>

      <xs:element name="run" type="tns:run"/>

      <xs:element name="runResponse" type="tns:runResponse"/>

      <xs:element name="updateSource" type="tns:updateSource"/>

      <xs:element name="updateSourceResponse" type="tns:updateSourceResponse"/>

      <xs:complexType name="getClassNamesByInterface">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getClassNamesByInterfaceResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="BGException">
        <xs:sequence>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="tag" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="run">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
          <xs:element name="arg1" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="runResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:runMessage" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="runMessage">
        <xs:sequence>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="messageType" type="tns:runMessageType" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getSource">
        <xs:sequence>
          <xs:element name="className" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getSourceResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" minOccurs="0"/>
          <xs:element name="data" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDynamicClassesByInterface">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getDynamicClassesByInterfaceResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:dynamicClass" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dynamicClass">
        <xs:sequence>
          <xs:element name="deprecated" type="xs:boolean"/>
          <xs:element name="description" type="xs:string" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="className" type="xs:string"/>
        <xs:attribute name="lastModified" type="xs:long" use="required"/>
        <xs:attribute name="needsRecompile" type="xs:boolean" use="required"/>
      </xs:complexType>

      <xs:complexType name="getDynamicClasses">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getDynamicClassesResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:dynamicClass" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

<!-- alexanderfefelov
      <xs:complexType name="deleteClasses">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
-->

      <xs:complexType name="deleteClassesResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:compilationResult" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="compilationResult">
        <xs:sequence>
          <xs:element name="errors" type="tns:compilationMessage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="warnings" type="tns:compilationMessage" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="compilationMessage">
        <xs:sequence>
          <xs:element name="column" type="xs:long"/>
          <xs:element name="line" type="xs:long"/>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="source" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="updateSource">
        <xs:sequence>
          <xs:element name="className" type="xs:string" minOccurs="0"/>
          <xs:element name="data" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="updateSourceResponse">
        <xs:sequence>
          <xs:element name="data" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="generateCode">
        <xs:sequence>
          <xs:element name="arg0" type="tns:generatorOptions" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="generatorOptions">
        <xs:sequence>
          <xs:element name="defaultImports" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="derivingInterfaceNames" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="fullClassName" type="xs:string" minOccurs="0"/>
          <xs:element name="interfaceNames" type="xs:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="rawResourceData" type="xs:string" minOccurs="0"/>
          <xs:element name="superclassName" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="generateCodeResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="isClassExists">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="isClassExistsResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="compile">
        <xs:sequence>
          <xs:element name="arg0" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="compileResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:compilationResult" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="recompileAll">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="recompileAllResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:compilationResult" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:simpleType name="runMessageType">
        <xs:restriction base="xs:string">
          <xs:enumeration value="OUT"/>
          <xs:enumeration value="ERR"/>
          <xs:enumeration value="INFO"/>
        </xs:restriction>
      </xs:simpleType>
</xs:schema>
  </types>
  <message name="updateSource">
    <part name="parameters" element="tns:updateSource"/>
  </message>
  <message name="updateSourceResponse">
    <part name="parameters" element="tns:updateSourceResponse"/>
  </message>
  <message name="BGException">
    <part name="fault" element="tns:BGException"/>
  </message>
  <message name="recompileAll">
    <part name="parameters" element="tns:recompileAll"/>
  </message>
  <message name="recompileAllResponse">
    <part name="parameters" element="tns:recompileAllResponse"/>
  </message>
  <message name="getSource">
    <part name="parameters" element="tns:getSource"/>
  </message>
  <message name="getSourceResponse">
    <part name="parameters" element="tns:getSourceResponse"/>
  </message>
  <message name="getDynamicClasses">
    <part name="parameters" element="tns:getDynamicClasses"/>
  </message>
  <message name="getDynamicClassesResponse">
    <part name="parameters" element="tns:getDynamicClassesResponse"/>
  </message>
  <message name="getClassNamesByInterface">
    <part name="parameters" element="tns:getClassNamesByInterface"/>
  </message>
  <message name="getClassNamesByInterfaceResponse">
    <part name="parameters" element="tns:getClassNamesByInterfaceResponse"/>
  </message>
  <message name="getDynamicClassesByInterface">
    <part name="parameters" element="tns:getDynamicClassesByInterface"/>
  </message>
  <message name="getDynamicClassesByInterfaceResponse">
    <part name="parameters" element="tns:getDynamicClassesByInterfaceResponse"/>
  </message>
<!-- alexanderfefelov
  <message name="deleteClasses">
    <part name="parameters" element="tns:deleteClasses"/>
  </message>
-->
  <message name="deleteClassesResponse">
    <part name="parameters" element="tns:deleteClassesResponse"/>
  </message>
  <message name="generateCode">
    <part name="parameters" element="tns:generateCode"/>
  </message>
  <message name="generateCodeResponse">
    <part name="parameters" element="tns:generateCodeResponse"/>
  </message>
  <message name="isClassExists">
    <part name="parameters" element="tns:isClassExists"/>
  </message>
  <message name="isClassExistsResponse">
    <part name="parameters" element="tns:isClassExistsResponse"/>
  </message>
  <message name="run">
    <part name="parameters" element="tns:run"/>
  </message>
  <message name="runResponse">
    <part name="parameters" element="tns:runResponse"/>
  </message>
  <message name="compile">
    <part name="parameters" element="tns:compile"/>
  </message>
  <message name="compileResponse">
    <part name="parameters" element="tns:compileResponse"/>
  </message>
  <portType name="DynamicCodeService">
    <operation name="updateSource">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/updateSourceRequest" message="tns:updateSource"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/updateSourceResponse" message="tns:updateSourceResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/updateSource/Fault/BGException"/>
    </operation>
    <operation name="recompileAll">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/recompileAllRequest" message="tns:recompileAll"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/recompileAllResponse" message="tns:recompileAllResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/recompileAll/Fault/BGException"/>
    </operation>
    <operation name="getSource">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getSourceRequest" message="tns:getSource"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getSourceResponse" message="tns:getSourceResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getSource/Fault/BGException"/>
    </operation>
    <operation name="getDynamicClasses">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getDynamicClassesRequest" message="tns:getDynamicClasses"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getDynamicClassesResponse" message="tns:getDynamicClassesResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getDynamicClasses/Fault/BGException"/>
    </operation>
    <operation name="getClassNamesByInterface">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getClassNamesByInterfaceRequest" message="tns:getClassNamesByInterface"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getClassNamesByInterfaceResponse" message="tns:getClassNamesByInterfaceResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getClassNamesByInterface/Fault/BGException"/>
    </operation>
    <operation name="getDynamicClassesByInterface">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getDynamicClassesByInterfaceRequest" message="tns:getDynamicClassesByInterface"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getDynamicClassesByInterfaceResponse" message="tns:getDynamicClassesByInterfaceResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/getDynamicClassesByInterface/Fault/BGException"/>
    </operation>
<!-- alexanderfefelov
    <operation name="deleteClasses">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/deleteClassesRequest" message="tns:deleteClasses"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/deleteClassesResponse" message="tns:deleteClassesResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/deleteClasses/Fault/BGException"/>
    </operation>
-->
    <operation name="generateCode">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/generateCodeRequest" message="tns:generateCode"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/generateCodeResponse" message="tns:generateCodeResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/generateCode/Fault/BGException"/>
    </operation>
    <operation name="isClassExists">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/isClassExistsRequest" message="tns:isClassExists"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/isClassExistsResponse" message="tns:isClassExistsResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/isClassExists/Fault/BGException"/>
    </operation>
    <operation name="run">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/runRequest" message="tns:run"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/runResponse" message="tns:runResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/run/Fault/BGException"/>
    </operation>
    <operation name="compile">
      <input wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/compileRequest" message="tns:compile"/>
      <output wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/compileResponse" message="tns:compileResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://common.dynamic.kernel.bgbilling.bitel.ru/DynamicCodeService/compile/Fault/BGException"/>
    </operation>
  </portType>
  <binding name="DynamicCodeServiceBinding" type="tns:DynamicCodeService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="updateSource">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="recompileAll">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getSource">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getDynamicClasses">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getClassNamesByInterface">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="getDynamicClassesByInterface">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
<!-- alexanderfefelov
    <operation name="deleteClasses">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
-->
    <operation name="generateCode">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="isClassExists">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="run">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
    <operation name="compile">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="DynamicCodeService">
    <port name="DynamicCodeService" binding="tns:DynamicCodeServiceBinding">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>


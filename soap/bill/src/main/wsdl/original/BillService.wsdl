<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.2.9-b130926.1035 svn-revision#5f6196f2b90e9460065a4c2f4e30e065b245e51e. -->
<definitions targetNamespace="http://service.common.bill.modules.bgbilling.bitel.ru/" name="BillService" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:tns="http://service.common.bill.modules.bgbilling.bitel.ru/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata">
  <types>
    <xs:schema version="1.0" targetNamespace="http://service.common.bill.modules.bgbilling.bitel.ru/" xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="http://common.bitel.ru">

      <xs:import namespace="http://common.bitel.ru"/>

      <xs:import namespace="http://www.w3.org/2005/05/xmlmime" schemaLocation="http://www.w3.org/2005/05/xmlmime"/>
      <xs:element name="BGException" type="tns:BGException"/>

      <xs:element name="BGIllegalArgumentException" type="tns:BGIllegalArgumentException"/>

      <xs:element name="BGMessageException" type="tns:BGMessageException"/>

      <xs:element name="bankAccountList" type="tns:bankAccountList"/>

      <xs:element name="bankAccountListResponse" type="tns:bankAccountListResponse"/>

      <xs:element name="billDocumentCreate" type="tns:billDocumentCreate"/>

      <xs:element name="billDocumentCreateResponse" type="tns:billDocumentCreateResponse"/>

      <xs:element name="billDocumentDelete" type="tns:billDocumentDelete"/>

      <xs:element name="billDocumentDeleteResponse" type="tns:billDocumentDeleteResponse"/>

      <xs:element name="billDocumentDownload" type="tns:billDocumentDownload"/>

      <xs:element name="billDocumentDownloadResponse" type="tns:billDocumentDownloadResponse"/>

      <xs:element name="billDocumentListForContract" type="tns:billDocumentListForContract"/>

      <xs:element name="billDocumentListForContractResponse" type="tns:billDocumentListForContractResponse"/>

      <xs:element name="documentSpecListForCustomer" type="tns:documentSpecListForCustomer"/>

      <xs:element name="documentSpecListForCustomerResponse" type="tns:documentSpecListForCustomerResponse"/>

      <xs:element name="invoiceDocumentDownload" type="tns:invoiceDocumentDownload"/>

      <xs:element name="invoiceDocumentDownloadResponse" type="tns:invoiceDocumentDownloadResponse"/>

      <xs:element name="invoiceDocumentListForContract" type="tns:invoiceDocumentListForContract"/>

      <xs:element name="invoiceDocumentListForContractResponse" type="tns:invoiceDocumentListForContractResponse"/>

      <xs:element name="templateDocumentPositionList" type="tns:templateDocumentPositionList"/>

      <xs:element name="templateDocumentPositionListResponse" type="tns:templateDocumentPositionListResponse"/>

      <xs:complexType name="billDocument">
        <xs:complexContent>
          <xs:extension base="tns:abstractBillDocument">
            <xs:sequence/>
            <xs:attribute name="bankAccountId" type="xs:int" use="required"/>
            <xs:attribute name="paymentDate" type="xs:dateTime"/>
            <xs:attribute name="paymentId" type="xs:int" use="required"/>
            <xs:attribute name="paymentUserId" type="xs:int" use="required"/>
            <xs:attribute name="status" type="xs:int" use="required"/>
            <xs:attribute name="unloadStatus" type="xs:int" use="required"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="abstractBillDocument">
        <xs:complexContent>
          <xs:extension base="ns1:id">
            <xs:sequence>
              <xs:element name="documentData" type="xs:base64Binary" minOccurs="0"/>
              <xs:element name="positionList" type="tns:documentPosition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
            <xs:attribute name="address" type="xs:string"/>
            <xs:attribute name="contractComment" type="xs:string"/>
            <xs:attribute name="contractId" type="xs:int" use="required"/>
            <xs:attribute name="contractTitle" type="xs:string"/>
            <xs:attribute name="correction" type="xs:int" use="required"/>
            <xs:attribute name="dateCreated" type="xs:dateTime"/>
            <xs:attribute name="documentSpecId" type="xs:int" use="required"/>
            <xs:attribute name="documentSpecTitle" type="xs:string"/>
            <xs:attribute name="month" type="xs:int" use="required"/>
            <xs:attribute name="number" type="xs:int" use="required"/>
            <xs:attribute name="numberFormatted" type="xs:string"/>
            <xs:attribute name="numberInMonth" type="xs:int" use="required"/>
            <xs:attribute name="numberInYear" type="xs:int" use="required"/>
            <xs:attribute name="numerationPoolId" type="xs:int" use="required"/>
            <xs:attribute name="recipient" type="xs:string"/>
            <xs:attribute name="total" type="xs:decimal"/>
            <xs:attribute name="userId" type="xs:int" use="required"/>
            <xs:attribute name="year" type="xs:int" use="required"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="documentPosition">
        <xs:sequence>
          <xs:element name="extractPositions" type="tns:documentPosition" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="params">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="key" minOccurs="0" type="xs:string"/>
                      <xs:element name="value" minOccurs="0" type="xs:string"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="positionSpec" type="tns:documentPositionSpec" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="amount" type="xs:decimal"/>
        <xs:attribute name="amountScaled" type="xs:decimal"/>
        <xs:attribute name="amountUnscaled" type="xs:decimal"/>
        <xs:attribute name="awlz" type="xs:boolean" use="required"/>
        <xs:attribute name="contractId" type="xs:int" use="required"/>
        <xs:attribute name="count" type="xs:decimal"/>
        <xs:attribute name="countNumsAfterComma" type="xs:int" use="required"/>
        <xs:attribute name="countNumsRoundingMode" type="xs:int" use="required"/>
        <xs:attribute name="inTotal" type="xs:boolean" use="required"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="positionId" type="xs:int" use="required"/>
        <xs:attribute name="unit" type="xs:string"/>
        <xs:attribute name="unitCode" type="xs:string"/>
      </xs:complexType>

      <xs:complexType name="documentPositionSpec">
        <xs:complexContent>
          <xs:extension base="ns1:id">
            <xs:sequence>
              <xs:element name="addWhenLessZero" type="xs:boolean"/>
              <xs:element name="amount" type="xs:string" minOccurs="0"/>
              <xs:element name="count" type="xs:string" minOccurs="0"/>
              <xs:element name="countNumsAfterComma" type="xs:string" minOccurs="0"/>
              <xs:element name="countNumsRoundingMode" type="xs:string" minOccurs="0"/>
              <xs:element name="extractor" type="xs:string" minOccurs="0"/>
              <xs:element name="inTotal" type="xs:boolean"/>
              <xs:element name="name" type="xs:string" minOccurs="0"/>
              <xs:element name="params">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="entry" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="key" minOccurs="0" type="xs:string"/>
                          <xs:element name="value" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="title" type="xs:string" minOccurs="0"/>
              <xs:element name="unit" type="xs:string" minOccurs="0"/>
              <xs:element name="unitCode" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="docType">
        <xs:complexContent>
          <xs:extension base="ns1:idTitle">
            <xs:sequence>
              <xs:element name="comment" type="xs:string" minOccurs="0"/>
              <xs:element name="createWhenLessOrEqZero" type="xs:boolean"/>
              <xs:element name="createWhenStronglyLessZero" type="xs:boolean"/>
              <xs:element name="NSubContractPositions" type="xs:boolean"/>
              <xs:element name="npid" type="xs:int"/>
              <xs:element name="pattern" type="xs:string" minOccurs="0"/>
              <xs:element name="positionList" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element name="setupString" type="xs:string" minOccurs="0"/>
              <xs:element name="subContractPositions" type="xs:boolean"/>
              <xs:element name="type" type="xs:int"/>
              <xs:element name="xmlContractConsist" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element name="xmlModulesConsist" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element name="xmlPluginsConsist" type="xs:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="bankAccount">
        <xs:complexContent>
          <xs:extension base="ns1:idTitle">
            <xs:sequence/>
            <xs:attribute name="account" type="xs:string"/>
            <xs:attribute name="bankIdentificationCode" type="xs:string"/>
            <xs:attribute name="bankTitle" type="xs:string"/>
            <xs:attribute name="comment" type="xs:string"/>
            <xs:attribute name="correspondentAccount" type="xs:string"/>
            <xs:attribute name="groupMask" type="xs:long" use="required"/>
            <xs:attribute name="paymentType" type="xs:string"/>
            <xs:attribute name="paymentTypeId" type="xs:int" use="required"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="billDocumentListForContract">
        <xs:sequence>
          <xs:element name="contractId" type="xs:int"/>
          <xs:element name="page" type="ns1:page" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="billDocumentListForContractResponse">
        <xs:sequence>
          <xs:element name="return" type="ns1:result" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="list" final="extension restriction">
        <xs:sequence>
          <xs:element name="item" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="mapEntry">
        <xs:complexContent>
          <xs:extension base="tns:abstractMapEntry">
            <xs:sequence>
              <xs:element name="value" type="xs:anyType" minOccurs="0"/>
            </xs:sequence>
            <xs:attribute name="key" type="xs:string"/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="abstractMapEntry" abstract="true">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="map">
        <xs:sequence>
          <xs:element name="entry" type="tns:entry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="entry" final="extension restriction">
        <xs:complexContent>
          <xs:extension base="tns:abstractMapEntry">
            <xs:sequence>
              <xs:element name="key" type="xs:anyType" minOccurs="0"/>
              <xs:element name="value" type="xs:anyType" minOccurs="0"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="sortedMap" final="extension restriction">
        <xs:complexContent>
          <xs:extension base="tns:map">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="linkedMap" final="extension restriction">
        <xs:complexContent>
          <xs:extension base="tns:map">
            <xs:sequence/>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>

      <xs:complexType name="collection" final="extension restriction">
        <xs:sequence>
          <xs:element name="item" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="BGException">
        <xs:sequence>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="tag" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="BGMessageException">
        <xs:sequence>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="tag" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="BGIllegalArgumentException">
        <xs:sequence>
          <xs:element name="message" type="xs:string" minOccurs="0"/>
          <xs:element name="tag" type="xs:string" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="documentSpecListForCustomer">
        <xs:sequence>
          <xs:element name="contractId" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="documentSpecListForCustomerResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:docType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="billDocumentDownload">
        <xs:sequence>
          <xs:element name="contractId" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="billDocumentDownloadResponse">
        <xs:sequence>
          <xs:element name="name" type="xs:string" minOccurs="0"/>
          <xs:element name="data" xmime:expectedContentTypes="application/octet-stream" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="bankAccountList">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="bankAccountListResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:bankAccount" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="invoiceDocumentDownload">
        <xs:sequence>
          <xs:element name="arg0" type="xs:int"/>
          <xs:element name="arg1" type="xs:int"/>
          <xs:element name="arg2" type="xs:string" minOccurs="0"/>
          <xs:element name="arg3" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="invoiceDocumentDownloadResponse">
        <xs:sequence>
          <xs:element name="arg2" type="xs:string" minOccurs="0"/>
          <xs:element name="arg3" type="xs:base64Binary" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="billDocumentDelete">
        <xs:sequence>
          <xs:element name="contractId" type="xs:int"/>
          <xs:element name="id" type="xs:int"/>
          <xs:element name="customer" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="billDocumentDeleteResponse">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="billDocumentCreate">
        <xs:sequence>
          <xs:element name="contractId" type="xs:int"/>
          <xs:element name="documentSpecId" type="xs:int"/>
          <xs:element name="bankAccountId" type="xs:int"/>
          <xs:element name="year" type="xs:int"/>
          <xs:element name="month" type="xs:int"/>
          <xs:element name="documentPositionList" type="tns:documentPosition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="billDocumentCreateResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="templateDocumentPositionList">
        <xs:sequence>
          <xs:element name="contractId" type="xs:int"/>
          <xs:element name="documentSpecId" type="xs:int"/>
          <xs:element name="year" type="xs:int"/>
          <xs:element name="month" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="templateDocumentPositionListResponse">
        <xs:sequence>
          <xs:element name="return" type="tns:documentPosition" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="invoiceDocumentListForContract">
        <xs:sequence>
          <xs:element name="contractId" type="xs:int"/>
          <xs:element name="onlyReady" type="xs:boolean"/>
          <xs:element name="page" type="ns1:page" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="invoiceDocumentListForContractResponse">
        <xs:sequence>
          <xs:element name="return" type="ns1:result" minOccurs="0"/>
        </xs:sequence>
      </xs:complexType>
</xs:schema>
    <xsc:schema elementFormDefault="unqualified" version="1.0" targetNamespace="http://common.bitel.ru" xmlns:common="http://common.bitel.ru" xmlns:tns="http://common.bitel.ru" xmlns:xsc="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://service.common.bill.modules.bgbilling.bitel.ru/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

      <xsc:import namespace="http://service.common.bill.modules.bgbilling.bitel.ru/"/>

      <xsc:element name="result" type="tns:result"/>

      <xsc:complexType name="id">
        <xsc:sequence/>
        <xsc:attribute name="id" type="xsc:int" use="required"/>
      </xsc:complexType>

      <xsc:complexType name="idTitle">
        <xsc:complexContent>
          <xsc:extension base="tns:id">
            <xsc:sequence/>
            <xsc:attribute name="title" type="xsc:string"/>
          </xsc:extension>
        </xsc:complexContent>
      </xsc:complexType>

      <xsc:complexType name="page">
        <xsc:sequence/>
        <xsc:attribute name="pageCount" type="xsc:int" use="required"/>
        <xsc:attribute name="pageIndex" type="xsc:int" use="required"/>
        <xsc:attribute name="pageSize" type="xsc:int" use="required"/>
        <xsc:attribute name="recordCount" type="xsc:int" use="required"/>
      </xsc:complexType>

      <xsc:complexType name="result">
        <xsc:sequence>
          <xsc:element name="data" minOccurs="0">
            <xsc:complexType>
              <xsc:sequence>
                <xsc:element name="item" type="xsc:anyType" minOccurs="0" maxOccurs="unbounded"/>
              </xsc:sequence>
            </xsc:complexType>
          </xsc:element>
          <xsc:element name="page" type="tns:page" minOccurs="0"/>
          <xsc:element name="attributes" type="ns2:list" minOccurs="0"/>
        </xsc:sequence>
      </xsc:complexType>
</xsc:schema>
  </types>
  <message name="billDocumentListForContract">
    <part name="parameters" element="tns:billDocumentListForContract"/>
  </message>
  <message name="billDocumentListForContractResponse">
    <part name="parameters" element="tns:billDocumentListForContractResponse"/>
  </message>
  <message name="BGException">
    <part name="fault" element="tns:BGException"/>
  </message>
  <message name="BGMessageException">
    <part name="fault" element="tns:BGMessageException"/>
  </message>
  <message name="BGIllegalArgumentException">
    <part name="fault" element="tns:BGIllegalArgumentException"/>
  </message>
  <message name="billDocumentDelete">
    <part name="parameters" element="tns:billDocumentDelete"/>
  </message>
  <message name="billDocumentDeleteResponse">
    <part name="parameters" element="tns:billDocumentDeleteResponse"/>
  </message>
  <message name="documentSpecListForCustomer">
    <part name="parameters" element="tns:documentSpecListForCustomer"/>
  </message>
  <message name="documentSpecListForCustomerResponse">
    <part name="parameters" element="tns:documentSpecListForCustomerResponse"/>
  </message>
  <message name="bankAccountList">
    <part name="parameters" element="tns:bankAccountList"/>
  </message>
  <message name="bankAccountListResponse">
    <part name="parameters" element="tns:bankAccountListResponse"/>
  </message>
  <message name="templateDocumentPositionList">
    <part name="parameters" element="tns:templateDocumentPositionList"/>
  </message>
  <message name="templateDocumentPositionListResponse">
    <part name="parameters" element="tns:templateDocumentPositionListResponse"/>
  </message>
  <message name="billDocumentCreate">
    <part name="parameters" element="tns:billDocumentCreate"/>
  </message>
  <message name="billDocumentCreateResponse">
    <part name="parameters" element="tns:billDocumentCreateResponse"/>
  </message>
  <message name="billDocumentDownload">
    <part name="parameters" element="tns:billDocumentDownload"/>
  </message>
  <message name="billDocumentDownloadResponse">
    <part name="parameters" element="tns:billDocumentDownloadResponse"/>
  </message>
  <message name="invoiceDocumentListForContract">
    <part name="parameters" element="tns:invoiceDocumentListForContract"/>
  </message>
  <message name="invoiceDocumentListForContractResponse">
    <part name="parameters" element="tns:invoiceDocumentListForContractResponse"/>
  </message>
  <message name="invoiceDocumentDownload">
    <part name="parameters" element="tns:invoiceDocumentDownload"/>
  </message>
  <message name="invoiceDocumentDownloadResponse">
    <part name="parameters" element="tns:invoiceDocumentDownloadResponse"/>
  </message>
  <portType name="BillService">
    <operation name="billDocumentListForContract">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentListForContractRequest" message="tns:billDocumentListForContract"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentListForContractResponse" message="tns:billDocumentListForContractResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentListForContract/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentListForContract/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentListForContract/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="billDocumentDelete">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDeleteRequest" message="tns:billDocumentDelete"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDeleteResponse" message="tns:billDocumentDeleteResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDelete/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDelete/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDelete/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="documentSpecListForCustomer">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/documentSpecListForCustomerRequest" message="tns:documentSpecListForCustomer"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/documentSpecListForCustomerResponse" message="tns:documentSpecListForCustomerResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/documentSpecListForCustomer/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/documentSpecListForCustomer/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/documentSpecListForCustomer/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="bankAccountList">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/bankAccountListRequest" message="tns:bankAccountList"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/bankAccountListResponse" message="tns:bankAccountListResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/bankAccountList/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/bankAccountList/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/bankAccountList/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="templateDocumentPositionList">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/templateDocumentPositionListRequest" message="tns:templateDocumentPositionList"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/templateDocumentPositionListResponse" message="tns:templateDocumentPositionListResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/templateDocumentPositionList/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/templateDocumentPositionList/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/templateDocumentPositionList/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="billDocumentCreate">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentCreateRequest" message="tns:billDocumentCreate"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentCreateResponse" message="tns:billDocumentCreateResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentCreate/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentCreate/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentCreate/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="billDocumentDownload">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDownloadRequest" message="tns:billDocumentDownload"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDownloadResponse" message="tns:billDocumentDownloadResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDownload/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDownload/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/billDocumentDownload/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="invoiceDocumentListForContract">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentListForContractRequest" message="tns:invoiceDocumentListForContract"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentListForContractResponse" message="tns:invoiceDocumentListForContractResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentListForContract/Fault/BGException"/>
      <fault message="tns:BGMessageException" name="BGMessageException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentListForContract/Fault/BGMessageException"/>
      <fault message="tns:BGIllegalArgumentException" name="BGIllegalArgumentException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentListForContract/Fault/BGIllegalArgumentException"/>
    </operation>
    <operation name="invoiceDocumentDownload">
      <input wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentDownloadRequest" message="tns:invoiceDocumentDownload"/>
      <output wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentDownloadResponse" message="tns:invoiceDocumentDownloadResponse"/>
      <fault message="tns:BGException" name="BGException" wsam:Action="http://service.common.bill.modules.bgbilling.bitel.ru/BillService/invoiceDocumentDownload/Fault/BGException"/>
    </operation>
  </portType>
  <binding name="BillServiceBinding" type="tns:BillService">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
    <operation name="billDocumentListForContract">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="billDocumentDelete">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="documentSpecListForCustomer">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="bankAccountList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="templateDocumentPositionList">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="billDocumentCreate">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="billDocumentDownload">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="invoiceDocumentListForContract">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
      <fault name="BGMessageException">
        <soap:fault name="BGMessageException" use="literal"/>
      </fault>
      <fault name="BGIllegalArgumentException">
        <soap:fault name="BGIllegalArgumentException" use="literal"/>
      </fault>
    </operation>
    <operation name="invoiceDocumentDownload">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="literal"/>
      </input>
      <output>
        <soap:body use="literal"/>
      </output>
      <fault name="BGException">
        <soap:fault name="BGException" use="literal"/>
      </fault>
    </operation>
  </binding>
  <service name="BillService">
    <port name="BillService" binding="tns:BillServiceBinding">
      <soap:address location="REPLACE_WITH_ACTUAL_URL"/>
    </port>
  </service>
</definitions>

